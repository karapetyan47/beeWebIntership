{"ast":null,"code":"import _defineProperty from \"/home/michael/Desktop/beeWebIntership/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst initialState = {\n  users: [],\n  isLoggedIn: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'USER_LOGGED_IN':\n      return _objectSpread({}, state, {\n        isLoggedIn: true\n      });\n\n    case 'FETCH_USERS_SUCCESS':\n      return _objectSpread({}, state, {\n        users: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/michael/Desktop/beeWebIntership/src/redux/reducer/reducer.js"],"names":["initialState","users","isLoggedIn","reducer","state","action","type","payload"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAAEC,KAAK,GAAGJ,YAAV,EAAwBK,MAAxB,KAAoC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,+BACOF,KADP;AAEIF,QAAAA,UAAU,EAAE;AAFhB;;AAIJ,SAAK,qBAAL;AACI,+BACOE,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFlB;;AAIJ;AAAS,aAAOH,KAAP;AAXb;AAaH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["const initialState = {\n    users: [],\n    isLoggedIn: false\n}\n\nconst reducer = ( state = initialState, action ) => {\n    switch (action.type){\n        case 'USER_LOGGED_IN':\n            return{\n                ...state,\n                isLoggedIn: true\n            };\n        case 'FETCH_USERS_SUCCESS':    \n            return{\n                ...state,\n                users: action.payload\n            }\n        default: return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}