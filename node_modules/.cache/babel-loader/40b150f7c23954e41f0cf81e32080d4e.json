{"ast":null,"code":"import _slicedToArray from \"/home/michael/Desktop/beeWebIntership/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/michael/Desktop/beeWebIntership/src/containers/login-form-container/login-form-container.js\";\nimport React, { useState, useEffect } from 'react';\nimport LoginForm from '../../components/login-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { userLoggedIn, fetchUsers } from '../../redux/actions/actions-login';\n\nconst useInputValue = (resetError = () => {}, defaultValue = '') => {\n  const _useState = useState(defaultValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  return {\n    bind: {\n      value,\n      onChange: e => {\n        resetError();\n        setValue(e.target.value);\n      }\n    },\n    clear: () => setValue(\"\"),\n    value: () => value\n  };\n};\n\nconst LoginFormContainer = ({\n  isLoggedIn,\n  users,\n  userLoggedIn,\n  fetchUsers\n}) => {\n  const name = useInputValue(resetError);\n  const password = useInputValue();\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hasError = _useState4[0],\n        setHasError = _useState4[1];\n\n  useEffect(fetchUsers());\n\n  function resetError() {\n    setHasError(false);\n  }\n\n  if (isLoggedIn) {\n    return React.createElement(Redirect, {\n      to: \"/secret\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  const login = e => {\n    e.preventDefault();\n    let errorStatus = true;\n\n    if (name.value().trim() && password.value().trim()) {\n      const userList = users;\n\n      for (let user = 0; user < userList.length; user++) {\n        if (userList[user].name === name.value() && userList[user].password === password.value()) {\n          errorStatus = false;\n          userLoggedIn();\n          break;\n        }\n      }\n    }\n\n    errorStatus && setHasError(true);\n    name.clear();\n    password.clear();\n  };\n\n  return React.createElement(LoginForm, {\n    submit: login,\n    name: name,\n    password: password,\n    error: hasError,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  });\n};\n\nconst mapStateToProps = ({\n  users,\n  isLoggedIn\n}) => {\n  return {\n    users,\n    isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = {\n  userLoggedIn,\n  fetchUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginFormContainer);","map":{"version":3,"sources":["/home/michael/Desktop/beeWebIntership/src/containers/login-form-container/login-form-container.js"],"names":["React","useState","useEffect","LoginForm","connect","Redirect","userLoggedIn","fetchUsers","useInputValue","resetError","defaultValue","value","setValue","bind","onChange","e","target","clear","LoginFormContainer","isLoggedIn","users","name","password","hasError","setHasError","login","preventDefault","errorStatus","trim","userList","user","length","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport LoginForm from '../../components/login-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { userLoggedIn, fetchUsers } from '../../redux/actions/actions-login';\n\nconst useInputValue = (resetError=()=>{}, defaultValue = '') => {\n    const [ value, setValue ] = useState(defaultValue);\n\n    return {\n            bind: {\n                value,\n                onChange: (e) => {\n                    resetError();\n                    setValue( e.target.value )}            \n            },\n            clear: () => setValue(\"\"),\n            value: () => value\n        }\n    \n}\n\nconst LoginFormContainer = ({ isLoggedIn, users, userLoggedIn, fetchUsers }) => {\n\n    const name = useInputValue(resetError);\n    const password = useInputValue();\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(fetchUsers())\n\n    function resetError(){\n        setHasError(false)\n    }\n\n    if(isLoggedIn){\n        return <Redirect to=\"/secret\" />\n    }\n\n\n    const login = (e) => {\n        e.preventDefault();\n        let errorStatus = true;     \n        if(name.value().trim() && password.value().trim()) {            \n            const userList = users;          \n            for(let user = 0; user < userList.length; user++) { \n                if(userList[user].name === name.value() && \n                   userList[user].password === password.value()){\n                       errorStatus = false;                     \n                    userLoggedIn();\n                    break;\n                }              \n            }\n        }\n\n        errorStatus && setHasError(true);\n        name.clear();\n        password.clear();\n    }\n\n    return(\n        <LoginForm \n            submit={login} \n            name={name} \n            password={password} \n            error={hasError} \n        />\n    )\n}\n\n\nconst mapStateToProps = ({ users, isLoggedIn }) => {\n    return{\n    users,\n    isLoggedIn\n    }\n}\n\nconst mapDispatchToProps = {\n    userLoggedIn,\n    fetchUsers\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LoginFormContainer);"]},"metadata":{},"sourceType":"module"}